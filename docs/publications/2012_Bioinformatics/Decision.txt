27-Jun-2012
Manuscript ID: BIOINF-2012-0686
Title: Simulation Core Library: a Java library for numerical computation in systems biology

Dear Dr. Dräger,

The reviews of your manuscript are now in hand. The reviewers had substantial concerns about the manuscript and the Associate Editor, Olga Troyanskaya, has decided to reject your manuscript based on their advice.  Specifically, the reviewers had substantial concerns about the biological impact of this library on it's own and about it's relationship to other existing software.

As the journal receives more publishable manuscripts than its space will accommodate acceptance must be limited to manuscripts receiving the most favourable recommendations from reviewers.  Unfortunately, I must decline your request to have the manuscript published in Bioinformatics. The Associate Editor's general comments and those of the reviewers can be found at the foot of this e-mail. We will not consider any further versions of this manuscript, but I hope that you find the comments useful should you decide to revise your manuscript for another journal.

On behalf of the Executive Editor, I would like to thank you for considering Bioinformatics to present your work and I look forward to the possibility of receiving other manuscripts from you in the future.

Best regards,
Alison Hutchins
Bioinformatics  Editorial office


Here are the Editor's comments:

----------------------------------------
----------------------------------------

Here are the comments of the reviewers:
----------------------------------------
Reviewer: 1
Comments to the Author
1) General comments

In this Applications Note, the authors present "Simulation Core Library", a Java library for ODE simulations of SBML models.

2) Specific comments
a) major

The target audience for this software is Java developers who are looking for a Java ODE solver for SBML models. This audience is likely to be most interested in 1) the API that they will use, and 2) why they should use this particular library; and less interested in implementation details (which they don't care about) and object-oriented design (which they understand and expect).  Given this, and the short format of the Applications Note, it might be beneficial to emphasize the motivation (why this library is important) and the unique contribution of this work (what programming challenges does this library alleviate for developers) by shortening and tightening the Implementation section and expanding the Introduction and the Results and Conclusion sections.

There is no mention of existing Java ODE libraries, except for the reference to the Apache Commons Math library. If Java ODE libraries already exist, they should be referenced, along with an explanation of what they cannot do that the "Simulation Core Library" can do. One of the primary contributions of this work seems to be the interface between the existing JSBML and Apache Commons Math libraries. If this was a significant challenge, this should be highlighted in the paper.

Perhaps the biggest strength of the paper (independent of the software itself) is the mention that the software is currently used by existing applications CellDesigner and SBMLsimulator. But CellDesigner has been around for many years and users of that software were able to run ODE simulations long before "Simulation Core Library". This might be confusing to readers. If the ability to run ODE simulations in CellDesigner is not new, then it might be worthwhile to provide some clarity on why this is mentioned. Does the "Simulation Core Library" somehow perform better than previous ODE solvers in CellDesigner? Or is the use in CellDesigner mentioned only to show a proof-of-concept that the library "can be easily integrated in larger applications"? If the latter is true, can you expand on how easy it was to integrate into CellDesigner, or the relationship/comparison between the "Simulation Core Library" versus the other simulation libraries in CellDesigner? Also, it seems SBMLsimulator was written by a group closely related to, and including some members of, the authors of this paper. This should be explicitly mentioned.

b) minor
Typo in the first sentence of the Abstract: "is a the" should be "is a" or "is the".

The process of determining the exact time at which an event occurs is mentioned a couple times, but this must have been previously solved by existing SBML ODE solvers. If this is trivial, it might not be worth mentioning. If this is non-trivial, then perhaps citing a reference to a previous implementation might be appropriate.

The claim that the software solved 99.27% of the models from the BioModels.net database piqued my curiosity as to what happened in the failed 0.73%.


Reviewer: 2
Comments to the Author
Drager et al describes a Java library, Simulation Core Library (SCL), for numerical computation in systems biology. I personally do not like the name ‘Simulation Core Library’ or the project name ‘simulation-core’ because they do not reflect the (limited) application area of this library, but I guess software authors have the freedom to name their applications. The library is certainly useful, because it provides a large number of solvers, and perhaps more importantly, classes to work with SBML (based on JSBML) and SED-ML. Although I do not completely agree with the authors about the lack of reusability of existing C/C++ or matlab based simulators, having an alternative implementation in Java is certainly welcome.

The biggest problem I have with this paper is that I do not understand why the authors decided to publish the library instead of the application SBMLSimulator. When I clicked the link “Simulation Core Library Web Site” from their sourceforge.net website, I saw a website for SBMLSimulator. It took me a while to figure out that SCL is the simulation engine of SBMLSimulator that has been deliberately separated so that other programs can make use of it. Other than a javadoc generated API documentation, I could not find any description about the design and structure of SCL, and how exactly potential users can make use of this library.  It appeared to me that SBMLSimulator is the main application and SCL is only one of the components, and perhaps a side product of this software.

I am confused with the aim of this paper because, if for some reason (SBMLSimulator is not ready?) the authors would like to emphasize the library instead of the program, they should create a dedicated webpage with detailed information. There should be introduction, tutorials and examples about different classes in this library so that uses can make efficient use of the library. The current status of the website is unacceptable for the publication of this library.

If SBMLSimulator is mature and provides unique features compared to other simulators, it might be better to publish SBMLSimulator and list SCL as one of the features that makes SBMLSimulator useful not only to users, but also to developers of similar applications. This is a very common approach because many modern applications provide APIs and libraries that can be reused by others. A paper about SBMLSimulator would reach a much larger audience because there are many more users than developers.

The paper is generally readable but there are some minor language issues:
•	The first sentence of abstract: … is a the key… ?
•	Page 1, Line 20: of BioModels Database, should be “in the BioModels Database”?
•	Page 1, Line 56, However, … does not read well. Perhaps need to reorganize with words like “is currently lacking”.
•	Page 1 right, Line 38: “can therefore easily be” should be “can therefore be easily”
•	Page 2, line 33, adding “that is” before “responsible for “?



Reviewer: 3
Comments to the Author
This short note introduce a new dynamic simulation Java library for numerical computation in systems biology. The introduction is very clear. Although with the length of the note, it is hard to fully grasp details of this software package, from the description in this note and more details from their website, their work seems interesting to readers in systems biology areas.